import java.lang.invoke.MethodHandles;
import java.util.Objects;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class PersistenceManager {

    private final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass()); // Variable utilizada para imprimir mensajes en la consola del servidor
    private static final PersistenceManager SINGLETON = new PersistenceManager(); // Objeto persistencia
    protected EntityManagerFactory emf;

    public static PersistenceManager getInstance() {
        return SINGLETON;
    }

    private PersistenceManager() {
    }

    public EntityManagerFactory getEntityManagerFactory() {
        if (Objects.isNull(emf)) {
            createEntityManagerFactory();
        }
        return emf;
    }

    public void closeEntityManagerFactory() {

        if (Objects.nonNull(emf)) {
            emf.close();
            emf = null;
            log.info("Persistencia terminada", new java.util.Date());
        }
    }

    protected void createEntityManagerFactory() {

        this.emf = Persistence.createEntityManagerFactory(Constantes.PU);
        log.info("Persistencia iniciada", new java.util.Date());
    }

    @Override
    protected void finalize() throws Throwable {
        try {
            this.closeEntityManagerFactory();
        } finally {
            super.finalize();
        }
    }
}
